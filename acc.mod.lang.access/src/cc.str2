module cc

imports

  strategolib
  
  statix/api
  statix/runtime/-

  signatures/lib/start-sig
  injections/lib/-
  
  lib/main
  
  pp

  libspoofax/term/origin

rules

  post-analyze :: ? -> ?
  post-analyze = implicate-injections-accmodlang

rules // Code Completion

  downgrade-placeholders = downgrade-placeholders-accmodlang
  upgrade-placeholders   = upgrade-placeholders-accmodlang
  is-inj                 = is-accmodlang-inj-cons
  pp-partial             = pp-partial-accmodlangaccess-string

rules

  accmod-at-offset =
  	(debug(!"region-start: "); ?region-start, debug(!"region-end: "); ?region-end, ?ast); Third
	; oncebu(is(AccessModifier); covers(|region-start, region-end); ?mod)
	; !mod

  covers(|region-start, region-end) = where(
  	debug; 
  	origin-offset; ?(term-start, term-end); debug;
  	not(
  		 !(term-start, region-end); int-gt; debug(!"term start beyond region end")
  	  <+ !(term-end, region-start); int-lt; debug(!"term end before region start")
  	)
  	; !((region-start, region-end), (term-start, term-end)); debug(!"overlapping: ")
  )
  
  covers(|region-start, region-end) = !((region-start, region-end), <id>); debug(!"not overlapping: "); fail

rules

  analysis-has-errors = stx--get-analysis; stx-analysis-has-errors

rules

  accmod-to-placeholder = 
  	(debug(!"region-start: "); ?region-start, debug(!"region-end: "); ?region-end, ?ast); Third;
  	oncebu(is(AccessModifier); covers(|region-start, region-end); !AccessModifier-Plhdr()); debug
    
  tail-to-placeholder =
  	(debug(!"region-start: "); ?region-start, debug(!"region-end: "); ?region-end, ?ast); Third;
  	oncebu(is(AccessModifier); ?acc-mod; covers(|region-start, region-end); desugar-all; debug(!"desugared placeholder:"); oncebu(?MRLNil(); !acc-mod; origin-track-forced(!ModuleRefList-Plus-Plhdr())
  		; where(origin-offset < debug(!"tail placeholder offset: ") + debug(!"tail placeholder has no offset"))
  	)); debug

  