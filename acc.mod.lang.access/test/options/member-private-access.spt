module options/member-private-access

test on member modifier - private -- exact -- yes [[
#member-private-access: if-exact-type

class A {
  private var x = 42
  public foo(a: A) {
    return a.x
  }
}
class B : public A {
}
]]
analysis succeeds

test on member modifier - private -- exact -- no [[
#member-private-access: if-exact-type

class A {
  private var x = 42
  public foo(a: B) {
    return a.x
  }
}
class B : public A {
}
]]
analysis fails

test on member modifier - internal -- exact -- yes [[
#member-private-access: if-exact-type

class A {
  internal(M) var x = 42
  public foo(a: A) {
    return a.x
  }
}
class B : public A {
}
module M { }
]]
analysis succeeds

test on member modifier - internal -- exact -- no [[
#member-private-access: if-exact-type

class A {
  internal(M) var x = 42
  public foo(a: B) {
    return a.x
  }
}
class B : public A {
}
module M { }
]]
analysis fails

test on member modifier - private -- subtype [[
#member-private-access: if-instance-of-current

class A {
  private var x = 42
  public foo(a: A) {
    return a.x
  }
}
class B : public A {
}
]]
analysis succeeds

test on member modifier - private -- subtype -- yes [[
#member-private-access: if-instance-of-current

class A {
  private var x = 42
  public foo(a: B) {
    return a.x
  }
}
class B : public A {
}
]]
analysis succeeds


test on member modifier - internal -- subtype [[
#member-private-access: if-instance-of-current

class A {
  internal(M) var x = 42
  public foo(a: A) {
    return a.x
  }
}
class B : public A {
}
module M { }
]]
analysis succeeds


test on member modifier - internal -- subtype -- yes [[
#member-private-access: if-instance-of-current

class A {
  internal(M) var x = 42
  public foo(a: B) {
    return a.x
  }
}
class B : public A {
}
module M { }
]]
analysis succeeds

// inheritance modifier

test on inheritance modifier - instance of current - yes [[
#member-protected-access: allow
#member-private-access: if-instance-of-current

module p {
class A {
  protected internal var x = 42
}
class B : private A {
  public foo(a: C) {
    return a.x
  }
}
class C : public B {
}
}
]]
analysis succeeds

test on inheritance modifier - exact-type - no [[
#member-protected-access: allow
#member-private-access: if-exact-type

module p {
class A {
  protected internal var x = 42
}
class B : private A {
  public foo(a: C) {
    return a.x
  }
}
class C : public B {
}
}
]]
analysis fails

// .........................

test on inheritance modifier - instance of current - yes [[
#member-protected-access: allow
#member-private-access: if-instance-of-current

module p {
class A {
  public var x = 42
}
class B : private A {
  public foo(a: C) {
    return a.x
  } 
}
class C : public B {
}
}
]]
analysis succeeds

test on inheritance modifier - allow [[
#member-private-access: if-instance-of-current

module p {
class A {
  public var x = 42
}
class B : private A { }
class C : public B {
  public foo(a: B) {
    return a.x
  }
}
}
]]
analysis fails

// private members

test private member access [[
#member-private-access: if-exact-type

class A {
  private var x = 42
  public getX(a: A) {
    return a.x
  }
}
]]
analysis succeeds

