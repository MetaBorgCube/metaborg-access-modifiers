module compatibility/csharp

test simple [[
#csharp

module p {
class A {
  protected internal var x = 2
}
}
module q {
import p
class B : public A {
  public var a = new A()
}
}
]]
run csharp-test-transform
transform "Test C# Compatibility"

test nested - refer to parent [[
#csharp

module p {
  class A {
    protected internal var x = 42
  }
  module q {
    class B : public A {
      public var a = new A()
    }
  }
}
]]
run csharp-test-transform
transform "Test C# Compatibility"

test nested - refer to root [[
#csharp

class A {
  protected internal var x = 42
}
module p {
  module q {
    class B : public A {
      public var a = new A()
    }
  }
}
]]
run csharp-test-transform
transform "Test C# Compatibility"


test private protected access - no instance [[
#csharp

module p {
class A {
  private protected var x = 42
}
class B : public A { }
class C : public B {
  public foo(a: B) {
    return a.x
  }
}
}
]]
run csharp-test-transform
transform "Test C# Compatibility"

test private protected access - instance [[
#csharp

module p {
class A {
  private protected var x = 42
}
class B : public A { }
class C : public B {
  public foo(a: C) {
    return a.x
  }
}
}
]]
run csharp-test-transform
transform "Test C# Compatibility"