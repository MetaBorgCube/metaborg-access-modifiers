module compatibility/csharp/protected

test protected internal -- lex -- self [[
class A {
  protected internal var x = 42
  public foo() {
    return x
  }
}
]]
run csharp-test-transform
transform "Test C# Compatibility"

test protected internal -- lex -- sub [[
class A {
  protected internal var x = 42
}
class B : public A {
  public foo() {
    return x
  }
}
]]
run csharp-test-transform
transform "Test C# Compatibility"


test protected internal -- lex -- subsub [[
class A {
  protected internal var x = 42
}
class B : public A {}
class C : public B {
  public foo() {
    return x
  }
}
]]
run csharp-test-transform
transform "Test C# Compatibility"

test protected internal -- lex -- sub -- other module [[
module p {
  class A {
    protected internal var x = 42
  }
}
module q {
  import p
  class B : public A {
    public foo() {
      return x
    }
  }
}
]]
run csharp-test-transform
transform "Test C# Compatibility"


test protected internal -- lex -- subsub -- other module [[
module p {
  class A {
    protected internal var x = 42
  }
}
module q {
  import p
  class B : public A {}
  class C : public B {
    public foo() {
      return x
    }
  }
}
]]
run csharp-test-transform
transform "Test C# Compatibility"



test protected internal -- mem -- self [[
class A {
  protected internal var x = 42
  public foo(a: A) {
    return a.x
  }
}
]]
run csharp-test-transform
transform "Test C# Compatibility"

test protected internal -- mem -- sub -- decl [[
class A {
  protected internal var x = 42
}
class B : public A {
  public foo(a: A) {
    return a.x
  }
}
]]
run csharp-test-transform
transform "Test C# Compatibility"

test protected internal -- mem -- sub -- self [[
class A {
  protected internal var x = 42
}
class B : public A {
  public foo(b: B) {
    return b.x
  }
}
]]
run csharp-test-transform
transform "Test C# Compatibility"

test protected internal -- mem -- sub -- sub [[
class A {
  protected internal var x = 42
}
class B : public A {
  public foo(c: C) {
    return c.x
  }
}
class C : public B { }
]]
run csharp-test-transform
transform "Test C# Compatibility"



test protected internal -- mem -- subsub -- decl [[
class A {
  protected internal var x = 42
}
class B : public A {}
class C : public B {
  public foo(a: A) {
    return a.x
  }
}
]]
run csharp-test-transform
transform "Test C# Compatibility"
test protected internal -- mem -- subsub -- parent [[
class A {
  protected internal var x = 42
}
class B : public A {}
class C : public B {
  public foo(b: B) {
    return b.x
  }
}
]]

run csharp-test-transform
transform "Test C# Compatibility"
test protected internal -- mem -- subsub -- self [[
class A {
  protected internal var x = 42
}
class B : public A {}
class C : public B {
  public foo(c: C) {
    return c.x
  }
}
]]

run csharp-test-transform
transform "Test C# Compatibility"
test protected internal -- mem -- subsub -- sub [[
class A {
  protected internal var x = 42
}
class B : public A {}
class C : public B {
  public foo(d: D) {
    return d.x
  }
}
class D : public C { }
]]
run csharp-test-transform
transform "Test C# Compatibility"

test protected internal -- mem -- decl -- other [[
class A {
  protected internal var x = 42
}
class X {
  public foo(a: A) {
    return a.x
  }
}
]]
run csharp-test-transform
transform "Test C# Compatibility"



test protected internal -- mem -- sub -- other [[
class A {
  protected internal var x = 42
}
class B : public A { }
class X {
  public foo(b: B) {
    return b.x
  }
}
]]
run csharp-test-transform
transform "Test C# Compatibility"



test protected internal -- mem -- sub -- decl -- other module [[
module p {
class A {
  protected internal var x = 42
}
}
module q {
import p
class B : public A {
  public foo(a: A) {
    return a.x
  }
}
}
]]
run csharp-test-transform
transform "Test C# Compatibility"

test protected internal -- mem -- sub -- self -- other module [[
module p {
class A {
  protected internal var x = 42
}
}
module q {
import p
class B : public A {
  public foo(b: B) {
    return b.x
  }
}
}
]]
run csharp-test-transform
transform "Test C# Compatibility"


test protected internal -- mem -- subsub -- decl -- other module [[
module p {
class A {
  protected internal var x = 42
}
}
module q {
import p
class B : public A {}
}
module r {
import p
import q
class C : public B {
  public foo(a: A) {
    return a.x
  }
}
}
]]
run csharp-test-transform
transform "Test C# Compatibility"
test protected internal -- mem -- subsub -- parent -- other module [[
module p {
class A {
  protected internal var x = 42
}
}
module q {
import p
class B : public A {}
}
module r {
import q
class C : public B {
  public foo(b: B) {
    return b.x
  }
}
}
]]

run csharp-test-transform
transform "Test C# Compatibility"
test protected internal -- mem -- subsub -- self -- other module [[
module p {
class A {
  protected internal var x = 42
}
}
module q {
import p
class B : public A {}
}
module r {
import q
class C : public B {
  public foo(c: C) {
    return c.x
  }
}
}
]]


test protected internal -- mem -- decl -- other [[
module p {
class A {
  protected internal var x = 42
}
}
module q {
import p
class X {
  public foo(a: A) {
    return a.x
  }
}
}
]]
run csharp-test-transform
transform "Test C# Compatibility"

test protected internal -- mem -- sub -- other [[
module p {
class A {
  protected internal var x = 42
}
}
module q {
import p
class B : public A { }
}
module r {
import q
class X {
  public foo(b: B) {
    return b.x
  }
}
}
]]
run csharp-test-transform
transform "Test C# Compatibility"
