module recv-child-ref

// derived from 2: make each receiver a child of ref

test mem | pos: ref same def | inh: ref same def | pos: recv sibling ref | inh: recv child ref [[
#java 

module M {
  class Ref {
    private var x = 42
    public foo(i: Rec) {
      return i.x
    }
  }
  class Rec: public Ref { }
}
]]
run java-test-transform
transform "Test Java Compatibility"

test mem | wrapped | pos: ref same def | inh: ref same def | pos: recv sibling ref | inh: recv child ref [[
#java 

module M {
  class A {
    class Ref {
      private var x = 42
      public foo(i: Rec) {
      	return i.x
      }
    }
    class Rec: public Ref { }
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

test mem | pos: ref same def | inh: ref same def | pos: recv sub ref | inh: recv child ref [[
#java 

module M {
  class Ref {
    private var x = 42
    public foo(i: Rec) {
      return i.x
    }
    class Rec: public Ref { }
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

test mem | wrapped | pos: ref same def | inh: ref same def | pos: recv sub ref | inh: recv child ref [[
#java 

module M {
  class A {
    class Ref {
      private var x = 42
      public foo(i: Rec) {
      	return i.x
      }
      class Rec: public Ref { }
    }
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

// mem | pos: ref - same - def | inh: ref parent def: ref cannot be same as def and its parent class at the same time
// mem | pos: ref - same - def | inh: ref child def: ref cannot be same as def and its child class at the same time
// mem | pos: ref - same - def | inh: ref child def: ref cannot be same as def and unrelated at the same time

// mem | pos: ref - enclosing - def | inh: ref same def: enclosing class cannot be same class
// mem | pos: ref - enclosing - def | inh: ref parent def: no access path
// mem | pos: ref - enclosing - def | inh: ref child def: enclosing class cannot be child class
// mem | pos: ref - enclosing - def | inh: ref sibling def: no access path

// mem | pos: ref - sub - def | inh: ref same def: cannot be subclass and same
// mem | pos: ref - sub - def | inh: ref parent def: enclosing class cannot be child class

test mem | pos: ref sub def | inh: ref child def |  pos: recv sibling ref | inh: recv child ref [[
#java 

module M {
  class Def {
    private var x = 42
    class Ref: public Def {
      public foo(i: Rec) {
        return i.x
      }
    }
    class Rec: public Ref { }
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

test mem | wrapped | pos: ref sub def | inh: ref child def |  pos: recv sibling ref | inh: recv child ref [[
#java 

module M {
  class A {
    class Def {
      private var x = 42
      class Ref: public Def {
        public foo(i: Rec) {
      	  return i.x
        }
      }
      class Rec: public Ref { }
    }
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

test mem | pos: ref sub def | inh: ref child def | pos: recv sub ref | inh: recv child ref [[
#java 

module M {
  class Def {
    private var x = 42
    class Ref: public Def {
      public foo(i: Rec) {
        return i.x
      }
      class Rec: public Ref { }
    }
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

test mem | wrapped | pos: ref sub def | inh: ref child def | pos: recv sub ref | inh: recv child ref [[
#java 

module M {
  class A {
    class Def {
      private var x = 42
      class Ref: public Def {
        public foo(i: Rec) {
      	  return i.x
        }
        class Rec: public Ref { }
      }
    }
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

// mem | pos: ref sibling def | inh: ref same def: impossible
// mem | pos: ref sibling def | inh: ref parent def: no access path

test mem | pos: ref sibling def | inh: ref child def | pos: recv sibling ref | inh: recv child ref [[
#java 

module M {
  class Def {
    private var x = 42
  }
  class Ref: public Def {
    public foo(i: Rec) {
      return i.x
    }
  }
  class Rec: public Ref { }
}
]]
run java-test-transform
transform "Test Java Compatibility"

test mem | wrapped | pos: ref sibling def | inh: ref child def | pos: recv sibling ref | inh: recv child ref [[
#java 

module M {
  class A {
    class Def {
      private var x = 42
    }
    class Ref: public Def {
      public foo(i: Rec) {
        return i.x
      }
    }
    class Rec: public Ref { }
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

test mem | pos: ref sibling def | inh: ref child def | pos: recv sub ref | inh: recv child ref [[
#java 

module M {
  class Def {
    private var x = 42
  }
  class Ref: public Def {
    public foo(i: Rec) {
      return i.x
    }
    class Rec: public Ref { }
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

test mem | wrapped | pos: ref sibling def | inh: ref child def | pos: recv sub ref | inh: recv child ref [[
#java 

module M {
  class A {
    class Def {
      private var x = 42
    }
    class Ref: public Def {
      public foo(i: Rec) {
        return i.x
      }
      class Rec: public Ref { }
    }
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

// mem | pos: ref sibling def | inh: ref sibling def: no access path
