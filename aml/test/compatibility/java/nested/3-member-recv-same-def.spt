module recv-same-def


// derived from 1: added explicit receiver which is instance of Def
//   added test cases where ref does not inherit def

// "mem | pos: ref same def | inh: ref same def | recv same def": same as "mem | pos: ref same def | inh: ref same def | recv same ref"

// mem | pos: ref - same - def | inh: ref parent def: ref cannot be same as def and its parent class at the same time
// mem | pos: ref - same - def | inh: ref child def: ref cannot be same as def and its child class at the same time
// mem | pos: ref - same - def | inh: ref child def: ref cannot be same as def and unrelated at the same time

// mem | pos: ref - enclosing - def | inh: ref same def: enclosing class cannot be same class
test mem | pos: ref - enclosing - def | inh: ref parent def | recv same def [[
#java 

module M {
  class Ref {
    class Def: public Ref {
      private var x = 42
    }
    public foo(i: Def) {
      return i.x
    }
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

test mem | wrapped | pos: ref - enclosing - def | inh: ref parent def | recv same def [[
#java 

module M {
  class A {
    class Ref {
      class Def: public Ref {
        private var x = 42
      }
      public foo(i: Def) {
  	    return i.x
      }
    }
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

// mem | pos: ref - enclosing - def | inh: ref child def: enclosing class cannot be child class
test mem | pos: ref - enclosing - def | inh: ref subling def | recv same def [[
#java 

module M {
  class Ref {
    class Def {
      private var x = 42
    }
    public foo(i: Def) {
  	  return i.x
    }
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

test mem | wrapped | pos: ref - enclosing - def | inh: ref subling def | recv same def [[
#java 

module M {
  class A {
    class Ref {
      class Def {
        private var x = 42
      }
      public foo(i: Def) {
  	    return i.x
      }
    }
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

// mem | pos: ref - sub - def | inh: ref same def: cannot be subclass and same
// mem | pos: ref - sub - def | inh: ref parent def: enclosing class cannot be child class

test mem | pos: ref sub def | inh: ref child def | recv same def [[
#java 

module M {
  class Def {
    private var x = 42
    class Ref: public Def {
      public foo(i: Def) {
        return i.x
      }
    }
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

test mem | wrapped | pos: ref sub def | inh: ref child def | recv same def [[
#java 

module M {
  class A {
    class Def {
      private var x = 42
      class Ref: public Def {
        public foo(i: Def) {
      	  return i.x
        }
      }
    }
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

// mem | pos: ref sibling def | inh: ref same def: impossible
test mem | pos: ref sibling def | inh: ref parent def | recv same def [[
#java 

module M {
  class Ref {
    public foo(i: Def) {
      return i.x
    }
  }
  class Def: public Ref {
    private var x = 42
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

test mem | wrapped | pos: ref sibling def | inh: ref parent def | recv same def [[
#java 

module M {
  class A {
    class Ref {
      public foo(i: Def) {
        return i.x
      }
    }
    class Def: public Ref {
      private var x = 42
    }
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

test mem | pos: ref sibling def | inh: ref child def | recv same def [[
#java 

module M {
  class Def {
    private var x = 42
  }
  class Ref: public Def {
    public foo(i: Def) {
      return i.x
    }
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

test mem | wrapped | pos: ref sibling def | inh: ref child def | recv same def [[
#java 

module M {
  class A {
    class Def {
      private var x = 42
    }
    class Ref: public Def {
      public foo(i: Def) {
        return i.x
      }
    }
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

test mem | pos: ref sibling def | inh: ref sibling def | recv same def [[
#java 

module M {
  class Ref {
    public foo(i: Def) {
      return i.x
    }
  }
  class Def {
    private var x = 42
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

test mem | wrapped | pos: ref sibling def | inh: ref sibling def | recv same def [[
#java 

module M {
  class A {
    class Ref {
      public foo(i: Def) {
        return i.x
      }
    }
    class Def {
      private var x = 42
    }
  }
}
]]
run java-test-transform
transform "Test Java Compatibility"

